#!/usr/bin/env perl -Ilib

use strict;
use warnings;

use Nube::Config;
use Nube::OpenWeather;
use Getopt::Long;

use feature 'say';

sub help {
    <<~ "EOS";
    Usage: cli [command]

    Possible commands:
      init: Initialise the configuration file with an API key
            Example:
                \$ nube init

      now:  Get the current weather [--city CITY].
            Example:
                \$ nube now # Default to Amsterdam
                \$ nube now --city London

      help: Print this message
            Example:
                \$ nube help
    EOS
}

sub now {
    my ($city) = @_;

    if ( !Nube::Config::is_initialised() ) {
        say "Config file does not exist. Run the 'init' command to create one";
        exit 1;
    }

    eval {
        my $config  = Nube::Config::load();
        my $key     = $config->{api_key};
        my $decoded = Nube::OpenWeather::get( $key, $city );
        say $decoded->{weather}->[0]->{description};
        1;
    } or do {
        my $error = $@ || "Unkown failure";
        say "Error checking the current weather: $error";
        exit 1;
    };
}

sub init {
    print 'Copy and paste your API key here: ';
    my $api_key = readline(STDIN);
    chomp $api_key;

    eval {
        Nube::Config::create($api_key);
        1;
    } or do {
        my $error = $@ || "Unkown failure";
        say "Error writing the config: $error";
        exit 1;
    };
    say "Succefully initailised nube";
}

if ( scalar @ARGV == 0 ) {
    say help();
    exit 1;
}

if ( $ARGV[0] eq 'init' ) {
    init();
} elsif ( $ARGV[0] eq 'now' ) {
    my $city = "Amsterdam";
    GetOptions( "city=s" => \$city ) || die( help() );
    now($city);
} else {
    say help();
    exit 1;
}
